FORMAT: 1A
HOST: http://yalethinkspace.herokuapp.com/api/v1

# Thinkspace

API documentation for developers wanting to extracting information from the Thinkspace platform. Use this information to create visualizations, embeds, clients and more.

# Group Authentication

Not all endpoints are exposed to the end user. The following restrictions hold:

## User's site privileges
- `site_admin` : Reserved for Thinkspace Core
- `api_write` : For Thinkspace Team developers
- `site_curator` : Elevated access for moderation of content

## User's project privileges
- `project_member` : Access to some project resources 
- `project_admin` : Access to all project resources

## JWT Authentication [/auth{?username,password}]

The initial handshake takes place at `/auth`. The caller must store this token in memory for future calls in order to consume protected resources.

### Request a token [GET]

+ Parameters
    + username - The user making the request
    + password - The user's password
    
+ Response 200 (application/json)

        {
                "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1MjY1MTY0OTUsIm5iZiI6MTUyNjUxNjQ5NSwianRpIjoiMjA5ZTQ3ODgtOWRlMy00Y2YyLWE2NTItODQ5Y2YyY2EzMzUyIiwiZXhwIjoxNTI2NTE3Mzk1LCJpZGVudGl0eSI6Im5ld191c2VyIiwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIn0.aXyJiGGXz09F4sRQnEwaKBw7-6s3a6-KBGWGcFIS-fw",
                "username": "johndoe",
                "id": 20
        }

# Group Users

Resources related to users in the API.

## Users Collection [/users{?page,per_page,id,username,email,password,first_name,last_name}]

### List users [GET]

+ Parameters
    + page (number, optional) - Which page of results to show
        + Default: 1
    + per_page (number, optional) - How many users to return per page of results
        + Default: 5
    + id (number, optional) - Get a specific user by id (overrides pagination)
    + username (optional) - Get a specific user by username (overrides pagination)
    + email (optional) - Get a specific user by email address (overrides pagination)
    
+ Request
    + Headers

            Authorization: JWT <token>
    
+ Response 200 (application/json)

        [
            {
                "comments": [4],
                "posts": [],
                "hearted_projects": [1],
                "project_member": [1],
                "project_admin": [],
                "heartees": [2],
                "hearters": [12],
                "id": 1,
                "first_name": "Sarim",
                "last_name": "Abbas",
                "username": "sarimabbas",
                "email": "sarim.abbas@example.com",
                "timestamp": "2018-03-20T23:42:36.854044+00:00",
                "hearts": 9001,
                "site_admin": true,
                "site_curator": true,
                "api_write": false
            }
        ]

### Create a new user [POST]

+ Parameters
    + username 
    + email
    + password
        Must have a minimum length of 6.
    + first_name (optional)
    + last_name (optional)
    
+ Request (application/json)
    
        {
            "username" : "johndoe",
            "password" : "123456",
            "email" : "john.doe@example.com",
            "first_name" : "John",
            "last_name" " "Doe"
        }

    
+ Response 200 (application/json)

        {
            "comments": [],
            "posts": [],
            "hearted_projects": [],
            "project_member": [],
            "project_admin": [],
            "heartees": [],
            "hearters": [],
            "id": 15,
            "first_name": "John",
            "last_name": "Doe",
            "username": "johndoe",
            "email": "john.doe@example.com",
            "timestamp": "2018-05-17T01:15:32.122709+00:00",
            "hearts": 0,
            "site_admin": false,
            "site_curator": false,
            "api_write": false
        }
            
## Specific User [/users/{id}{?first_name,last_name,email,api_write,site_curator,site_admin}]

### Get a specific user [GET]

+ Parameters
    + id (number) - The unique id of the user

+ Request (application/json)
    
        {
            "id" : 1
        }

+ Response 200 (application/json)

        {
            "comments": [4],
            "posts": [],
            "hearted_projects": [1],
            "project_member": [1],
            "project_admin": [],
            "heartees": [2],
            "hearters": [12],
            "id": 1,
            "first_name": "Sarim",
            "last_name": "Abbas",
            "username": "sarimabbas",
            "email": "sarim.abbas@example.com",
            "timestamp": "2018-03-20T23:42:36.854044+00:00",
            "hearts": 9001,
            "site_admin": true,
            "site_curator": true,
            "api_write": false
        }